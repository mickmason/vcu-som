@import "../../../../node_modules/bulma/sass/utilities/initial-variables";
@import "../../../../node_modules/bulma/sass/utilities/functions";

//Project initial variables and Bulma overrides

//fonts
$garamond-prem: "garamond-premier-pro-display", Baskerville, "Baskerville Old Face", "Hoefler Text", "Times New Roman", serif;
$azo-sans: "azo-sans-web", "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, "Arial Narrow", Arial, sans-serif;
$feature-font-sans: $azo-sans;

$family-primary: $azo-sans;

//Spacing
$space-1: 0.614rem;
$space-2: 0.96rem;
$space-3: 1.5rem;
$space-4: 2.344rem; 
$space-5: 3.662rem;

//sizing:
$size-0: 3.815rem ;
$size-1: 3.052rem ;
$size-2: 2.441rem ;
$size-3: 1.953rem ;
$size-4: 1.563rem ;
$size-5: 1.25rem ;
$size-6: 1rem ;
$size-7: 0.75rem ;

//colours
$som-green: #006c68; 
$som-grana: #8E0021;

$gray-0: #101010;
$gray-2: #202020;
$gray-3: #303030;
$gray-32: #323232;
$gray-4: #404040;
$gray-6: #606060;

$light-10: #efefef;
$light-8: #dfdfdf;


//Bulma imports
@import "../../../../node_modules/bulma/sass/utilities/_all";
@import "../../../../node_modules/bulma/sass/base/_all";


@import "../../../../node_modules/bulma/sass/layout/_all";
@import "../../../../node_modules/bulma/sass/grid/_all";
@import "../../../../node_modules/bulma/sass/elements/_all";


//Project functions & mixins
//Borrowed without shame from https://codepen.io/corysimmons/pen/mVLVbo
//Parses number from a string like parseInt()
@function number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  } @else if type-of($value) != 'string' {
    $_: log('Value for `to-number` should be a number or a string.');
  }
  
  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);
  
  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);
    
    @if not (index(map-keys($numbers), $character) or $character == '.') {
      @return to-length(if($minus, -$result, $result), str-slice($value, $i))
    }
    
    @if $character == '.' {
      $digits: 1; 
    } @else if $digits == 0 {
      $result: $result * 10 + map-get($numbers, $character);  
    } @else {
      $digits: $digits * 10;
      $result: $result + map-get($numbers, $character) / $digits;
    }
  }
  
  @return if($minus, -$result, $result);;
}

//Flattens top of feature headings to accommodate line heights and keep even v rhythm
@function flat-margin($font-size, $lh) {
    $font-size: number($font-size);
    @return ($font-size - ($font-size * $lh)) / 2 ; 
}

//Project mixins:
@mixin feature-font($family: $garamond-prem, $weight: 300) {
    font-family: $family;
    font-weight: $weight;
}

* {
      box-sizing: border-box;
  }
  html {
      font-size: 14px;
  }
  body {
      margin: 0;
      padding: 0;
      font-size: 100%;
      font-color: $gray-32;
      line-height: 1.5;
  }
  
  @media screen and (min-width: $tablet) {
      html {
          font-size: 16px;
      }   
  }
  @media screen and (min-width: $desktop) {
      html {
          font-size: 18px;
      }   
  }            
  @media screen and (min-width: $fullhd) {
      html {
          font-size: 22.5px;
      }   
  }
  h1, h2, h3, h4, h5 {
    font-family: Garamond, serif;
    font-weight: 300;
    line-height: 1.3;
    margin-top: 0;
    margin-bottom: 0;
}
.title-display {
    @include feature-font($garamond-prem, 500);
    font-size: $size-0;
    font-weight: 200;
    color: $white;
    margin: 0;
    line-height: 1.1;
    transition: visibility 250ms ease-out;
    margin-top: flat-margin($size-0, 1.1);
}
.feature-font {
    
}
.feature-font, feature-font--sans-serif { 
    transition: visibility 250ms ease-out;
}
.feature-font--sans-serif {
    font-family: $azo-sans;
}
.wf-loading .feature-font, .wf-loading .feature-font--sans-serif {
    visibility: hidden;
}

.title-subtext {
    font-size: $size-5;
    font-weight: $weight-light;

    color: $white;
}
p, li {
    font-size: 1rem;
}
a {
    font-size: inherit; 
    color: inherit;
}
p {
    font-size: 1rem;
    margin-bottom: $space-3;
}
h1 {
    font-family: Garamond, serif;
    font-size: 2.369rem;
    margin-bottom: 1.333rem;
}
h2 {
    font-size: 1.777rem;
}
h3 {
    font-size: 1.333rem;
}
.vcu-angle {
    width:  0; 
    height: 0; 
    border-top:     60px solid    rgba(170, 187, 204, 1);
    border-bottom:  60px solid    rgba(187, 204, 170, 0.5);
    border-left:    60px solid    rgba(204, 187, 170, 0.5);
    border-right:   60px solid    rgba(170, 204, 187, 0.5);
    
}
.vcu-skewed {
    width:  25%;
    height: 100vh;
    position: relative;
    background-color: rgba(170, 187, 204, 1);
/* transform: skewX(-19.5deg);*/
}
.vcu-skewed::after {
    content: "";
    width:  100%;
    height: 100%;
    position: absolute;
    right: -20%;
    background-color: rgba(204, 187, 170, 1);
    transform: skew(-19.5deg, 0);
    z-index: -10;
}
.banner-test {
    background-color: rgba($som-green, 0.94);
}
.banner-text {
    position: relative;
    
    padding-top: $space-5;
    padding-bottom: $space-5;
}
//Custom utlis
.image-overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    min-height: 100%;
    background-color: rgba($black, 0.32);
    z-index: 10;     
    &.image-overlay--dark {
        background-color: rgba($black, 0.52);
    }
    &.image-overlay--light {
        background-color: rgba($black, 0.22);
    }
}

//Custom components 
.hero-image {
    position: relative;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;
    .hero-body {
         color: $white;
        z-index: 20;
    }
    .hero-foot {
         color: $white;
        padding-top: $space-2;
        padding-bottom: $space-2;
        z-index: 20;
    }
}

.banner-text-before, .banner-text-after {
    position: absolute;
}
.banner-text-before {
    z-index: -5;
    top: 0;
    left: -72%;
    width: 100%;
    height: 50vh;
    transform: skewX(-19.5deg);
}
.banner-text-before::before {
    content: " ";
    position: absolute; 
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    opacity: 0.84;
}
.banner-text-after {
    top: 50%;
    right: -19.5%;
    width: 100%;
    height: 40vh;
    transform: translateY(-50%);
    padding-left: 16%;
    padding-top: 4.959rem;
    padding-bottom: 4.959rem;
}
.banner-text-after::after {
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: skewX(19.5deg);
    background-color: $som-green;
    opacity: 0.84;
     z-index: -10;
}
            
